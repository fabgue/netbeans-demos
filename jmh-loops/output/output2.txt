# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.fguer.jmh.loops.LoopBenchmarkMain.forEachLambdaMaxInteger

# Run progress: 0.00% complete, ETA 00:02:40
# Fork: 1 of 2
# Warmup Iteration   1: 0.195 ms/op
# Warmup Iteration   2: 0.107 ms/op
# Warmup Iteration   3: 0.103 ms/op
# Warmup Iteration   4: 0.104 ms/op
# Warmup Iteration   5: 0.103 ms/op
Iteration   1: 0.104 ms/op
Iteration   2: 0.111 ms/op
Iteration   3: 0.193 ms/op
Iteration   4: 0.192 ms/op
Iteration   5: 0.193 ms/op

# Run progress: 6.25% complete, ETA 00:02:35
# Fork: 2 of 2
# Warmup Iteration   1: 0.194 ms/op
# Warmup Iteration   2: 0.104 ms/op
# Warmup Iteration   3: 0.103 ms/op
# Warmup Iteration   4: 0.102 ms/op
# Warmup Iteration   5: 0.102 ms/op
Iteration   1: 0.106 ms/op
Iteration   2: 0.113 ms/op
Iteration   3: 0.193 ms/op
Iteration   4: 0.193 ms/op
Iteration   5: 0.193 ms/op


Result "com.fguer.jmh.loops.LoopBenchmarkMain.forEachLambdaMaxInteger":
  0.159 ±(99.9%) 0.066 ms/op [Average]
  (min, avg, max) = (0.104, 0.159, 0.193), stdev = 0.044
  CI (99.9%): [0.093, 0.225] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.fguer.jmh.loops.LoopBenchmarkMain.forEachLoopMaxInteger

# Run progress: 12.50% complete, ETA 00:02:24
# Fork: 1 of 2
# Warmup Iteration   1: 0.117 ms/op
# Warmup Iteration   2: 0.116 ms/op
# Warmup Iteration   3: 0.116 ms/op
# Warmup Iteration   4: 0.115 ms/op
# Warmup Iteration   5: 0.116 ms/op
Iteration   1: 0.115 ms/op
Iteration   2: 0.115 ms/op
Iteration   3: 0.115 ms/op
Iteration   4: 0.115 ms/op
Iteration   5: 0.115 ms/op

# Run progress: 18.75% complete, ETA 00:02:14
# Fork: 2 of 2
# Warmup Iteration   1: 0.118 ms/op
# Warmup Iteration   2: 0.116 ms/op
# Warmup Iteration   3: 0.115 ms/op
# Warmup Iteration   4: 0.116 ms/op
# Warmup Iteration   5: 0.116 ms/op
Iteration   1: 0.115 ms/op
Iteration   2: 0.116 ms/op
Iteration   3: 0.115 ms/op
Iteration   4: 0.115 ms/op
Iteration   5: 0.116 ms/op


Result "com.fguer.jmh.loops.LoopBenchmarkMain.forEachLoopMaxInteger":
  0.115 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.115, 0.115, 0.116), stdev = 0.001
  CI (99.9%): [0.115, 0.116] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.fguer.jmh.loops.LoopBenchmarkMain.forMax2Integer

# Run progress: 25.00% complete, ETA 00:02:03
# Fork: 1 of 2
# Warmup Iteration   1: 0.104 ms/op
# Warmup Iteration   2: 0.103 ms/op
# Warmup Iteration   3: 0.101 ms/op
# Warmup Iteration   4: 0.102 ms/op
# Warmup Iteration   5: 0.102 ms/op
Iteration   1: 0.102 ms/op
Iteration   2: 0.102 ms/op
Iteration   3: 0.103 ms/op
Iteration   4: 0.104 ms/op
Iteration   5: 0.101 ms/op

# Run progress: 31.25% complete, ETA 00:01:53
# Fork: 2 of 2
# Warmup Iteration   1: 0.104 ms/op
# Warmup Iteration   2: 0.103 ms/op
# Warmup Iteration   3: 0.103 ms/op
# Warmup Iteration   4: 0.102 ms/op
# Warmup Iteration   5: 0.102 ms/op
Iteration   1: 0.102 ms/op
Iteration   2: 0.103 ms/op
Iteration   3: 0.102 ms/op
Iteration   4: 0.102 ms/op
Iteration   5: 0.102 ms/op


Result "com.fguer.jmh.loops.LoopBenchmarkMain.forMax2Integer":
  0.102 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.101, 0.102, 0.104), stdev = 0.001
  CI (99.9%): [0.101, 0.103] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.fguer.jmh.loops.LoopBenchmarkMain.forMaxInteger

# Run progress: 37.50% complete, ETA 00:01:43
# Fork: 1 of 2
# Warmup Iteration   1: 0.103 ms/op
# Warmup Iteration   2: 0.101 ms/op
# Warmup Iteration   3: 0.103 ms/op
# Warmup Iteration   4: 0.102 ms/op
# Warmup Iteration   5: 0.102 ms/op
Iteration   1: 0.102 ms/op
Iteration   2: 0.101 ms/op
Iteration   3: 0.101 ms/op
Iteration   4: 0.101 ms/op
Iteration   5: 0.101 ms/op

# Run progress: 43.75% complete, ETA 00:01:32
# Fork: 2 of 2
# Warmup Iteration   1: 0.105 ms/op
# Warmup Iteration   2: 0.102 ms/op
# Warmup Iteration   3: 0.102 ms/op
# Warmup Iteration   4: 0.103 ms/op
# Warmup Iteration   5: 0.102 ms/op
Iteration   1: 0.103 ms/op
Iteration   2: 0.102 ms/op
Iteration   3: 0.101 ms/op
Iteration   4: 0.107 ms/op
Iteration   5: 0.106 ms/op


Result "com.fguer.jmh.loops.LoopBenchmarkMain.forMaxInteger":
  0.103 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (0.101, 0.103, 0.107), stdev = 0.002
  CI (99.9%): [0.099, 0.106] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.fguer.jmh.loops.LoopBenchmarkMain.iteratorMaxInteger

# Run progress: 50.00% complete, ETA 00:01:22
# Fork: 1 of 2
# Warmup Iteration   1: 0.129 ms/op
# Warmup Iteration   2: 0.123 ms/op
# Warmup Iteration   3: 0.171 ms/op
# Warmup Iteration   4: 0.141 ms/op
# Warmup Iteration   5: 0.134 ms/op
Iteration   1: 0.126 ms/op
Iteration   2: 0.126 ms/op
Iteration   3: 0.122 ms/op
Iteration   4: 0.116 ms/op
Iteration   5: 0.115 ms/op

# Run progress: 56.25% complete, ETA 00:01:12
# Fork: 2 of 2
# Warmup Iteration   1: 0.121 ms/op
# Warmup Iteration   2: 0.119 ms/op
# Warmup Iteration   3: 0.117 ms/op
# Warmup Iteration   4: 0.115 ms/op
# Warmup Iteration   5: 0.116 ms/op
Iteration   1: 0.122 ms/op
Iteration   2: 0.125 ms/op
Iteration   3: 0.125 ms/op
Iteration   4: 0.125 ms/op
Iteration   5: 0.118 ms/op


Result "com.fguer.jmh.loops.LoopBenchmarkMain.iteratorMaxInteger":
  0.122 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (0.115, 0.122, 0.126), stdev = 0.004
  CI (99.9%): [0.116, 0.128] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.fguer.jmh.loops.LoopBenchmarkMain.lambdaMaxInteger

# Run progress: 62.50% complete, ETA 00:01:01
# Fork: 1 of 2
# Warmup Iteration   1: 0.162 ms/op
# Warmup Iteration   2: 0.583 ms/op
# Warmup Iteration   3: 0.586 ms/op
# Warmup Iteration   4: 0.580 ms/op
# Warmup Iteration   5: 0.591 ms/op
Iteration   1: 0.581 ms/op
Iteration   2: 0.579 ms/op
Iteration   3: 0.582 ms/op
Iteration   4: 0.578 ms/op
Iteration   5: 0.582 ms/op

# Run progress: 68.75% complete, ETA 00:00:51
# Fork: 2 of 2
# Warmup Iteration   1: 0.164 ms/op
# Warmup Iteration   2: 0.611 ms/op
# Warmup Iteration   3: 0.579 ms/op
# Warmup Iteration   4: 0.579 ms/op
# Warmup Iteration   5: 0.586 ms/op
Iteration   1: 0.578 ms/op
Iteration   2: 0.586 ms/op
Iteration   3: 0.582 ms/op
Iteration   4: 0.579 ms/op
Iteration   5: 0.578 ms/op


Result "com.fguer.jmh.loops.LoopBenchmarkMain.lambdaMaxInteger":
  0.581 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.578, 0.581, 0.586), stdev = 0.002
  CI (99.9%): [0.577, 0.584] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.fguer.jmh.loops.LoopBenchmarkMain.parallelStreamMaxInteger

# Run progress: 75.00% complete, ETA 00:00:41
# Fork: 1 of 2
# Warmup Iteration   1: 0.161 ms/op
# Warmup Iteration   2: 0.150 ms/op
# Warmup Iteration   3: 0.322 ms/op
# Warmup Iteration   4: 0.260 ms/op
# Warmup Iteration   5: 0.148 ms/op
Iteration   1: 0.269 ms/op
Iteration   2: 0.377 ms/op
Iteration   3: 0.362 ms/op
Iteration   4: 0.193 ms/op
Iteration   5: 0.152 ms/op

# Run progress: 81.25% complete, ETA 00:00:30
# Fork: 2 of 2
# Warmup Iteration   1: 0.348 ms/op
# Warmup Iteration   2: 0.155 ms/op
# Warmup Iteration   3: 0.214 ms/op
# Warmup Iteration   4: 0.362 ms/op
# Warmup Iteration   5: 0.375 ms/op
Iteration   1: 0.236 ms/op
Iteration   2: 0.149 ms/op
Iteration   3: 0.285 ms/op
Iteration   4: 0.361 ms/op
Iteration   5: 0.364 ms/op


Result "com.fguer.jmh.loops.LoopBenchmarkMain.parallelStreamMaxInteger":
  0.275 ±(99.9%) 0.136 ms/op [Average]
  (min, avg, max) = (0.149, 0.275, 0.377), stdev = 0.090
  CI (99.9%): [0.139, 0.411] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.fguer.jmh.loops.LoopBenchmarkMain.streamMaxInteger

# Run progress: 87.50% complete, ETA 00:00:20
# Fork: 1 of 2
# Warmup Iteration   1: 0.121 ms/op
# Warmup Iteration   2: 0.113 ms/op
# Warmup Iteration   3: 0.113 ms/op
# Warmup Iteration   4: 0.118 ms/op
# Warmup Iteration   5: 0.112 ms/op
Iteration   1: 0.113 ms/op
Iteration   2: 0.113 ms/op
Iteration   3: 0.107 ms/op
Iteration   4: 0.107 ms/op
Iteration   5: 0.107 ms/op

# Run progress: 93.75% complete, ETA 00:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 0.115 ms/op
# Warmup Iteration   2: 0.113 ms/op
# Warmup Iteration   3: 0.112 ms/op
# Warmup Iteration   4: 0.122 ms/op
# Warmup Iteration   5: 0.122 ms/op
Iteration   1: 0.122 ms/op
Iteration   2: 0.122 ms/op
Iteration   3: 0.110 ms/op
Iteration   4: 0.107 ms/op
Iteration   5: 0.107 ms/op


Result "com.fguer.jmh.loops.LoopBenchmarkMain.streamMaxInteger":
  0.111 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (0.107, 0.111, 0.122), stdev = 0.006
  CI (99.9%): [0.102, 0.120] (assumes normal distribution)


# Run complete. Total time: 00:02:45

Benchmark                                   Mode  Cnt  Score   Error  Units
LoopBenchmarkMain.forEachLambdaMaxInteger   avgt   10  0.159 ± 0.066  ms/op
LoopBenchmarkMain.forEachLoopMaxInteger     avgt   10  0.115 ± 0.001  ms/op
LoopBenchmarkMain.forMax2Integer            avgt   10  0.102 ± 0.001  ms/op
LoopBenchmarkMain.forMaxInteger             avgt   10  0.103 ± 0.003  ms/op
LoopBenchmarkMain.iteratorMaxInteger        avgt   10  0.122 ± 0.006  ms/op
LoopBenchmarkMain.lambdaMaxInteger          avgt   10  0.581 ± 0.004  ms/op
LoopBenchmarkMain.parallelStreamMaxInteger  avgt   10  0.275 ± 0.136  ms/op
LoopBenchmarkMain.streamMaxInteger          avgt   10  0.111 ± 0.009  ms/op
